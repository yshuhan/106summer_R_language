1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
9 - 7
3 * 2
4 / 2
9 %% 5
1 + 3
9 - 7
3 * 2
4 / 2
9 %% 5
1.5 + 3
1.5 + "three"
x<-3
q()
help(sum)
x <- 3
y <- 4
z <- sum(x + y)
help(sum)
sqrt(4)
11%/%5
11%%5
<h3>單位：km<sup>2</sup></h3>
help(sub)
log<sub>y</sub>x
log <sub>y</sub>x
help(exp)
c(1,2)+C(1,2,3,4)
c(1, 2) + C(1, 2, 3, 4)
c(1, 2) + C(1, 2)
> c(1, 2) * c(1, 2, 3) # 1*1 2*2 1*3
c(1, 2) * c(1, 2, 3) # 1*1 2*2 1*3
c(1, 2) + c(1, 2) # 1*1 2*2 1*3
c(1, 2) + c(1, 2)
c(1, 2) + c(1, 2)
c(1, 2) + c(1, 2, 3, 4)
c(1, 2) * c(1, 2)
c(1, 2) * c(1, 2, 3, 4)
c(1, 2) * c(1, 2, 3)
$vectors # 特徵向量
vectors # 特徵向量
$values
x <- c(1, 2, 4, 3, 1, 2, 3, 4,1)
factor(x)
x
x <- list(a = 1, b = TRUE, c = "test", d = c(1, 2, 3))
x
x <- list(a = 1, b = TRUE, c = "test", d = c(1, 2, 3))
x[1]
x$b # 是利用 % 加上名稱提取資料
x[[4]][1] # x[[4]] 取出第四個值，因為第四個值是向量，所以可以在取一次指標，取出向量的元素值。
data <- readLines("Desktop/A_lvr_land_A.CSV", encoding="big5") # 讀取實價登入資料，是一行一行讀取進來。
data <- iconv(data, "big5", "utf8") # 將資料轉成 UTF-8。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(data) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count) # 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
+     for(col in 1:column_count) {
+         fix_data[row,col] <- strsplit(data[row], ",")[[1]][col]}} # 執行 for loop 將資料塞入 fix_data。
write.table(fix_data[2:row_count,], file = "fix_A_lvr_land_A.CSV", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
> library(XML) # 要先安裝 XML package 再載入。
library(XML) # 要先安裝 XML package 再載入。
install.packages("XML")
library("XML", lib.loc="~/R/win-library/3.5")
library(XML) # 要先安裝 XML package 再載入。
data <- xmlToDataFrame("Desktop/A_lvr_land_A.XML")
data <- iris # iris 是 R 內建的資料。
write.table(data, file = "test.CSV", sep = ",")
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/Stock/index.html", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/Stock/index.html", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
Longley's Economic Regression Data
Longley's Economic Regression Data
longley
library(ggplot2)
longley
ggplot(data = longley, aes(x = Year )) + geom_bar(fill= "lightblue", colour=("black"))
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) + geom_bar(fill= "lightblue", colour=("black"))
longley
ggplot(data = longley, aes(x = GNP.deflator )) + geom_bar(fill= "lightblue", colour=("black"))
longley
ggplot(data = longley, aes(x = Year ,y = GNP.deflator )) + geom_bar(fill= "lightblue", colour=("black"))
mtcars
ggplot(data = , aes(x = hp )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mtcars, aes(x = hp )) + geom_bar(fill= "lightblue", colour=("black"))
mtcars
ggplot(data = mtcars, aes(x = cyl )) + geom_bar(fill= "lightblue", colour=("black"))
sleep
sleep
ggplot(data = sleep, aes(x = extra )) + geom_bar(fill= "lightblue", colour=("black"))
iris
economics
ggplot(data = economics, aes(x = pce )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = economics, aes(x = psavert )) + geom_bar(fill= "lightblue", colour=("black"))
EuStockMarkets
seals
msleep
ggplot(data = msleep, aes(x = vore )) + geom_bar(fill= "lightblue", colour=("black"))
Titanic
WorldPhones
islands
iris3
trees
stackloss
presidential
seals
ggplot(data = seals, aes(x = lat )) + geom_bar(fill= "lightblue", colour=("black"))
midwest
ggplot(data = midwest, aes(x = state )) + geom_bar(fill= "lightblue", colour=("black"))
movies
iris
ggplot(data = iris, aes(x = Species )) + geom_bar(fill= "lightblue", colour=("black"))
mpg
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = diamonds, aes(x = price)) +
geom_histogram()
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("red"))
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
swiss
npk
euro
attitude
ggplot(data = diamonds, aes(x = table, y=depth)) +
geom_point()
AirPassengers
HairEyeColor
Harman74.cor
ggplot(data = mpg, aes(x = dspl)) +
geom_histogram()
ggplot(data = mpg, aes(x = displ)) +
geom_histogram()
ggplot(data = mpg, aes(x = cty, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=2)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=1)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.5)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.2)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.3)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.5)
ggplot(data = mpg, aes(x = class, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = class, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = class, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
library(ggplot2)
mpg
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
library(ggplot2)
mpg
# 汽車廠牌的統計
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x =cty, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x=cty, y=hwy,color = class)) +
geom_point()
ggplot(mpg, aes(x=class, y = displ)) +
geom_boxplot()
setwd("D:/github/project/week3")
library(dplyr)
library(ggplot2)
# 讀入資料
data <- read.csv("data.csv", stringsAsFactors = FALSE)
train <- data[!is.na(data$shot_made_flag),]
test <- data[is.na(data$shot_made_flag),]
train$shot_made_flag <- as.factor(train$shot_made_flag)
# 查看欄位名稱
names(train)
# 將vector轉為factor
train$shot_made_flag <- factor(train$shot_made_flag, levels = c("1", "0"))
pplot <- function(feat) {
feat <- substitute(feat)
ggplot(data = train, aes_q(x = feat)) +
geom_bar(aes(fill = shot_made_flag), stat = "count", position = "fill") +
scale_fill_brewer(palette = "Set1", direction = -1) +
ggtitle(paste("accuracy by", feat))
}
# alpha值是透明度，介於0到1
courtplot <- function(feat) {
feat <- substitute(feat)
train %>%
ggplot(aes(x = lon, y = lat)) +
geom_point(aes_q(color = feat), alpha = 0.7, size = 3) +
ylim(c(33.7, 34.0883)) +
scale_color_brewer(palette = "Set1") +
theme_void() +
ggtitle(paste(feat))
}
courtplot(combined_shot_type)
# 使用filter查找出特定條件為true的情況，這裡把"Jump Shot"找出來設為較不顯眼的顏色，重新畫圖
# ylim是在y軸設定界限，讓他只呈現出範圍內的資料
ggplot() +
geom_point(data = filter(train, combined_shot_type == "Jump Shot"),
aes(x = lon, y = lat), color = "grey", alpha = 0.3, size = 2) +
geom_point(data = filter(train, combined_shot_type != "Jump Shot"),
aes(x = lon, y = lat,
color = combined_shot_type), alpha = 0.7, size = 3) +
ylim(c(33.7, 34.0883)) +
scale_color_brewer(palette = "Set1") +
theme_void() +
ggtitle("Shot Types")
ggplot() +
geom_point(data = filter(train, combined_shot_type != "Jump Shot",
shot_distance < 5),
aes(x = loc_x, y = loc_y,
color = shot_made_flag),
alpha = 0.7, size = 3) +
scale_color_brewer(palette = "Set1") +
geom_point(aes(x =0, y = 0), size = 5, shape = 4) +
theme_void() +
ggtitle("Shots from up close")
# facet_grid():根據shot_made_flag分成兩個圖
ggplot(train, aes(x = loc_x, y = loc_y)) +
geom_point(aes(color = shot_made_flag), alpha = 0.5, size = 0.5) +
ylim(c(-50, 400)) +
theme_void() +
scale_color_brewer(palette = "Set1") +
facet_grid(~ shot_made_flag) +
labs(title = "Shots Made(Blue) vs. Shots Missed(Red)")
x_bins <- cut(train$loc_x, breaks = 25)
pplot(x_bins) + geom_bar() + ggtitle("Shot Distribution by x_bins") +
theme(axis.text.x = element_blank())
pplot(x_bins) + theme(axis.text.x = element_blank())
# desc()按遞減方式排序變數
train %>% count(action_type) %>%
arrange(desc(n)) %>% filter(n < 20) -> actions
train$action_type[train$action_type %in% actions$action_type] <- "Other"
prop.table(table(train$action_type, train$shot_made_flag),1) -> temp
as.data.frame.matrix(temp) -> temp
temp$shot <- rownames(temp)
ggplot(temp, aes(x = reorder(shot, `1`), y = 1)) +
geom_point(aes(y = `1`), size = 3, color = " dark blue", stat = "identity") +
coord_flip() +
labs(y = "Accuracy", x = "", title = "Accuracy by Shot_type")
