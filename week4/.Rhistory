1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
9 - 7
3 * 2
4 / 2
9 %% 5
1 + 3
9 - 7
3 * 2
4 / 2
9 %% 5
1.5 + 3
1.5 + "three"
x<-3
q()
help(sum)
x <- 3
y <- 4
z <- sum(x + y)
help(sum)
sqrt(4)
11%/%5
11%%5
<h3>單位：km<sup>2</sup></h3>
help(sub)
log<sub>y</sub>x
log <sub>y</sub>x
help(exp)
c(1,2)+C(1,2,3,4)
c(1, 2) + C(1, 2, 3, 4)
c(1, 2) + C(1, 2)
> c(1, 2) * c(1, 2, 3) # 1*1 2*2 1*3
c(1, 2) * c(1, 2, 3) # 1*1 2*2 1*3
c(1, 2) + c(1, 2) # 1*1 2*2 1*3
c(1, 2) + c(1, 2)
c(1, 2) + c(1, 2)
c(1, 2) + c(1, 2, 3, 4)
c(1, 2) * c(1, 2)
c(1, 2) * c(1, 2, 3, 4)
c(1, 2) * c(1, 2, 3)
$vectors # 特徵向量
vectors # 特徵向量
$values
x <- c(1, 2, 4, 3, 1, 2, 3, 4,1)
factor(x)
x
x <- list(a = 1, b = TRUE, c = "test", d = c(1, 2, 3))
x
x <- list(a = 1, b = TRUE, c = "test", d = c(1, 2, 3))
x[1]
x$b # 是利用 % 加上名稱提取資料
x[[4]][1] # x[[4]] 取出第四個值，因為第四個值是向量，所以可以在取一次指標，取出向量的元素值。
data <- readLines("Desktop/A_lvr_land_A.CSV", encoding="big5") # 讀取實價登入資料，是一行一行讀取進來。
data <- iconv(data, "big5", "utf8") # 將資料轉成 UTF-8。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(data) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count) # 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
+     for(col in 1:column_count) {
+         fix_data[row,col] <- strsplit(data[row], ",")[[1]][col]}} # 執行 for loop 將資料塞入 fix_data。
write.table(fix_data[2:row_count,], file = "fix_A_lvr_land_A.CSV", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
> library(XML) # 要先安裝 XML package 再載入。
library(XML) # 要先安裝 XML package 再載入。
install.packages("XML")
library("XML", lib.loc="~/R/win-library/3.5")
library(XML) # 要先安裝 XML package 再載入。
data <- xmlToDataFrame("Desktop/A_lvr_land_A.XML")
data <- iris # iris 是 R 內建的資料。
write.table(data, file = "test.CSV", sep = ",")
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/Stock/index.html", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/Stock/index.html", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
Longley's Economic Regression Data
Longley's Economic Regression Data
longley
library(ggplot2)
longley
ggplot(data = longley, aes(x = Year )) + geom_bar(fill= "lightblue", colour=("black"))
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) + geom_bar(fill= "lightblue", colour=("black"))
longley
ggplot(data = longley, aes(x = GNP.deflator )) + geom_bar(fill= "lightblue", colour=("black"))
longley
ggplot(data = longley, aes(x = Year ,y = GNP.deflator )) + geom_bar(fill= "lightblue", colour=("black"))
mtcars
ggplot(data = , aes(x = hp )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mtcars, aes(x = hp )) + geom_bar(fill= "lightblue", colour=("black"))
mtcars
ggplot(data = mtcars, aes(x = cyl )) + geom_bar(fill= "lightblue", colour=("black"))
sleep
sleep
ggplot(data = sleep, aes(x = extra )) + geom_bar(fill= "lightblue", colour=("black"))
iris
economics
ggplot(data = economics, aes(x = pce )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = economics, aes(x = psavert )) + geom_bar(fill= "lightblue", colour=("black"))
EuStockMarkets
seals
msleep
ggplot(data = msleep, aes(x = vore )) + geom_bar(fill= "lightblue", colour=("black"))
Titanic
WorldPhones
islands
iris3
trees
stackloss
presidential
seals
ggplot(data = seals, aes(x = lat )) + geom_bar(fill= "lightblue", colour=("black"))
midwest
ggplot(data = midwest, aes(x = state )) + geom_bar(fill= "lightblue", colour=("black"))
movies
iris
ggplot(data = iris, aes(x = Species )) + geom_bar(fill= "lightblue", colour=("black"))
mpg
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = diamonds, aes(x = price)) +
geom_histogram()
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("red"))
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
swiss
npk
euro
attitude
ggplot(data = diamonds, aes(x = table, y=depth)) +
geom_point()
AirPassengers
HairEyeColor
Harman74.cor
ggplot(data = mpg, aes(x = dspl)) +
geom_histogram()
ggplot(data = mpg, aes(x = displ)) +
geom_histogram()
ggplot(data = mpg, aes(x = cty, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=2)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=1)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.5)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.2)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.3)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.5)
ggplot(data = mpg, aes(x = class, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = class, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = class, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
library(ggplot2)
mpg
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
library(ggplot2)
mpg
# 汽車廠牌的統計
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x =cty, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x=cty, y=hwy,color = class)) +
geom_point()
ggplot(mpg, aes(x=class, y = displ)) +
geom_boxplot()
install.packages("rsconnect")
rsconnect::setAccountInfo
rsconnect::setAccountInfo(name='yshuhan',
token='4AB81290DC6251312C5E683F9A223457',
secret='<SECRET>')
rsconnect::setAccountInfo(name='yshuhan',
token='4AB81290DC6251312C5E683F9A223457',
secret='H0yUVaUujaENxQuyoIb3FYgSi+L0r8Wjk+kpRHj8')
setwd("D:/github/project/week4")
source('D:/github/project/week4/HW4.R', encoding = 'UTF-8', echo=TRUE)
install.packages("rpart")
install.packages("rpart")
library(RColorBrewer)
library(foreign)
library(broom)
library(corrgram)
install.packages("corgram")
library(effects)
install.packages("effects")
library(effects)
library(car)
library(caret)
library(gridExtra)
library(knitr)
library(tidyr)
# 讀入資料
sdd <- read.csv("../input/Speed Dating Data.csv", header=TRUE)
# 讀入資料
sdd <- read.csv("Speed Dating Data.csv", header=TRUE)
View(sdd)
#清理資料
sdd<-sdd %>%
filter(wave>9 | wave <6)
#清理資料
sdd<-sdd %>%
filter(sdd$wave>9 | sdd$wave <6)
sdd = sdd %>%
mutate(income=as.numeric(gsub(",","",income))) %>%
mutate(tuition=as.numeric(gsub(",","",tuition)))
# Normalizing attributes
sdd <- sdd %>%
mutate(sum1_1=attr1_1+sinc1_1+intel1_1+fun1_1+amb1_1+shar1_1) %>%
mutate(attr1_1n=attr1_1/(sum1_1/100)) %>%
mutate(sinc1_1n=sinc1_1/(sum1_1/100)) %>%
mutate(intel1_1n=intel1_1/(sum1_1/100)) %>%
mutate(amb1_1n=amb1_1/(sum1_1/100)) %>%
mutate(shar1_1n=shar1_1/(sum1_1/100))
# Match by Number of date
by_order<-sdd %>%
dplyr::group_by(order) %>%
dplyr::summarize(average=mean(match, na.rm=TRUE))
library("dplyr", lib.loc="~/R/win-library/3.5")
# 載入套件
library(dplyr)
sdd = sdd %>%
mutate(income=as.numeric(gsub(",","",income))) %>%
mutate(tuition=as.numeric(gsub(",","",tuition)))
??mutate
sdd = sdd %>%
mutate(sdd,income=as.numeric(gsub(",","",income))) %>%
mutate(sdd,tuition=as.numeric(gsub(",","",tuition)))
sdd = sdd %>%
mutate(sdd,income=as.numeric(gsub(",","",income)))
# 載入套件
library(dplyr)
library(ggplot2)
library(rpart)
library(rpart.plot)
library(RColorBrewer)
library(foreign)
library(broom)
library(corrgram)
install.packages("rpart.plot")
library(rpart.plot)
library(effects)
library(car)
library(caret)
library(gridExtra)
library(knitr)
library(tidyr)
# 讀入資料
sdd <- read.csv("Speed Dating Data.csv", header=TRUE)
#清理資料
sdd<-sdd %>%
filter(sdd$wave>9 | sdd$wave <6)
sdd = sdd %>%
mutate(sdd,income=as.numeric(gsub(",","",income)))
sdd = sdd %>%
mutate(sdd,income=as.numeric(gsub(",","",income))) %>%
mutate(sdd,tuition=as.numeric(gsub(",","",tuition)))
View(sdd)
sdd = sdd %>%
mutate(,income=as.numeric(gsub(",","",income))) %>%
mutate(,tuition=as.numeric(gsub(",","",tuition)))
sdd = sdd %>%
mutate(income=as.numeric(gsub(",","",income))) %>%
mutate(tuition=as.numeric(gsub(",","",tuition)))
# Normalizing attributes
sdd <- sdd %>%
mutate(sum1_1=attr1_1+sinc1_1+intel1_1+fun1_1+amb1_1+shar1_1) %>%
mutate(attr1_1n=attr1_1/(sum1_1/100)) %>%
mutate(sinc1_1n=sinc1_1/(sum1_1/100)) %>%
mutate(intel1_1n=intel1_1/(sum1_1/100)) %>%
mutate(amb1_1n=amb1_1/(sum1_1/100)) %>%
mutate(shar1_1n=shar1_1/(sum1_1/100))
# Match by Number of date
by_order<-sdd %>%
dplyr::group_by(order) %>%
dplyr::summarize(average=mean(match, na.rm=TRUE))
qplot(data=by_order, x=order, y=average, xlab="Order of Meeting", ylab="Match") + geom_smooth(color=I("red"))
# Number of dates per event
qplot(data=sdd, wave, binwidth=1, colour=I("white"), fill=I("darkred"), xlab="Event", ylab="Number of Dates")
# 年紀
qplot(data=sdd,x=age,geom="histogram",colour=I("white"), fill=I("darkred"))
# 種族
sdd=sdd%>%mutate(race_x=if_else(race==1,"African ",if_else(race==2,"European",if_else(race==3,"Latino",if_else(race==4,"Asian",if_else(race==5,"Native","Other"))))))
qplot(data=sdd,  x=race_x, geom = "bar",colour=I("white") , fill=I("darkred"))
# field of study
sdd=sdd%>%mutate(field_x=if_else(field_cd==1,"Law",if_else(field_cd==2,"Math",if_else(field_cd==3,"Social Science",if_else(field_cd==4,"Medical Sciences",if_else(field_cd==5,"Engineering ",if_else(field_cd==6,"Journalism",if_else(field_cd==7,"History/Philosophy",if_else(field_cd==8,"Business",if_else(field_cd==9,"Education, Academia",if_else(field_cd==10,"Physics",if_else(field_cd==11,"Social Work",if_else(field_cd==12,"Undergraduate",if_else(field_cd==13,"Political Science",if_else(field_cd==14,"Film",if_else(field_cd==15,"Fine Arts",if_else(field_cd==16,"Languages",if_else(field_cd==17,"Architecture","Others"))))))))))))))))))
qplot(data=sdd,  x=field_x, geom = "bar",colour=I("white") , fill=I("darkred"))  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Interest
int <- sdd%>%select(sports,tvsports,exercise,dining,museums,art,hiking,gaming,clubbing,tv,theater,movies,concerts,shopping,yoga)%>%summarise_each(funs(mean(., na.rm=T)))
intl <- gather(int, interest, mean, sports:yoga, factor_key=TRUE) %>% arrange(mean)
ggplot(intl) +
geom_bar(aes(x=interest,y=mean),stat="identity",colour=I("white") , fill=I("darkred"))  + theme(axis.text.x = element_text(angle = 90, hjust = 1))
str(sdd)
summary(sdd)
dta <- read.table(file = "data/TIMSS2011TW.txt",
header = TRUE)
dta <- read.table(file = "TIMSS2011TW.txt",
header = TRUE)
View(dta)
str(dta)
summary(dta)
library(ggplot2)
ggplot(data = dta, aes(x = gender, y = math)) +
geom_boxplot() + coord_flip() +
labs( y = 'math', x = 'gender',
title = "數學分數")
ggplot(data = dta, aes(x = gender, y = math)) +
geom_boxplot() + coord_flip() +
labs( y = 'math', x = 'gender',
title = "數學分數對性別")
ggplot(data = dta, aes(x = gender, y = math)) +
geom_boxplot() + coord_flip() +
labs( y = 'math', x = 'gender',
title = "數學分數對性別盒狀圖")
with(dta,
tapply(math, gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(math ~ gender, data = dta)
library(Hmisc)
dta$parental.education <- factor(dta$parental.education,
levels = c('elementary school',
'junior high school',
'high school',
'college',
'university above'))
tapply(dta$math, dta$parental.education, mean)
ggplot(data = dta,
aes(x = parental.education, y = math)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = '父母教育', y = '數學平均分數') +
coord_flip()
anova(m1 <- lm(math ~ parental.education, data = dta))
ggplot(data = dta,
aes(group = parental.education,
y = math, x = educational.resources)) +
geom_point() +
stat_smooth(method = 'lm', se = F) +
stat_smooth(aes(group = parental.education,
y = math, x = educational.resources),
method = 'lm', se = F) +
facet_grid( . ~  parental.education) +
labs(x = '教育資源', y = '數學分數')
anova(m2 <- update(m1, . ~ . +
educational.resources, data = dta))
anova(m3 <- update(m2, . ~ . - parental.education,  data = dta))
#將結果放在一個list中
res_lm <- lapply(list(m1, m2, m3), summary)
#比較在控制教育資源下，父母教育的效果
(res_lm[[2]]$r.sq - res_lm[[3]]$r.sq)/res_lm[[2]]$r.sq
anova(m3, m2)
#比較在控制父母教育下，教育資源的效果
(res_lm[[2]]$r.sq - res_lm[[1]]$r.sq)/res_lm[[1]]$r.sq
anova(m1, m2)
library(coefplot)
install.packages("coefplot")
library(coefplot)
m2 <- lm(math ~ parental.education+educational.resources- 1,
data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '反應變項 = 數學分數')
m2 <- lm(math ~ parental.education+educational.resources- 1,
data = dta)
coefplot(m2, xlab = '估計值', ylab = '迴歸變項', title = '應變項 = 數學分數')
