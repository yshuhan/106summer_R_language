1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
## [1] 4
9 - 7
## [1] 2
3 * 2
## [1] 6
4 / 2
## [1]2
9 %% 5
## [1]4
1 + 3
9 - 7
3 * 2
4 / 2
9 %% 5
1 + 3
9 - 7
3 * 2
4 / 2
9 %% 5
1.5 + 3
1.5 + "three"
x<-3
q()
help(sum)
x <- 3
y <- 4
z <- sum(x + y)
help(sum)
sqrt(4)
11%/%5
11%%5
<h3>單位：km<sup>2</sup></h3>
help(sub)
log<sub>y</sub>x
log <sub>y</sub>x
help(exp)
c(1,2)+C(1,2,3,4)
c(1, 2) + C(1, 2, 3, 4)
c(1, 2) + C(1, 2)
> c(1, 2) * c(1, 2, 3) # 1*1 2*2 1*3
c(1, 2) * c(1, 2, 3) # 1*1 2*2 1*3
c(1, 2) + c(1, 2) # 1*1 2*2 1*3
c(1, 2) + c(1, 2)
c(1, 2) + c(1, 2)
c(1, 2) + c(1, 2, 3, 4)
c(1, 2) * c(1, 2)
c(1, 2) * c(1, 2, 3, 4)
c(1, 2) * c(1, 2, 3)
$vectors # 特徵向量
vectors # 特徵向量
$values
x <- c(1, 2, 4, 3, 1, 2, 3, 4,1)
factor(x)
x
x <- list(a = 1, b = TRUE, c = "test", d = c(1, 2, 3))
x
x <- list(a = 1, b = TRUE, c = "test", d = c(1, 2, 3))
x[1]
x$b # 是利用 % 加上名稱提取資料
x[[4]][1] # x[[4]] 取出第四個值，因為第四個值是向量，所以可以在取一次指標，取出向量的元素值。
data <- readLines("Desktop/A_lvr_land_A.CSV", encoding="big5") # 讀取實價登入資料，是一行一行讀取進來。
data <- iconv(data, "big5", "utf8") # 將資料轉成 UTF-8。
column_count <- length(strsplit(data[1], ",")[[1]])
row_count <- length(data) # 計算 column 與 count 個數。
fix_data <- matrix(NA, nrow = row_count, ncol = column_count) # 建立一個空的 NA 矩陣，維度來自於 row_count 與 column_count。
for(row in 1:row_count) {
+     for(col in 1:column_count) {
+         fix_data[row,col] <- strsplit(data[row], ",")[[1]][col]}} # 執行 for loop 將資料塞入 fix_data。
write.table(fix_data[2:row_count,], file = "fix_A_lvr_land_A.CSV", sep = ",", col.names = fix_data[1,]) # 將資料輸出，輸出注意一點，因為第一 row 是欄位名稱，所以記得指標要從 2 開始，指標 1 的部分要放到 col.names。
> library(XML) # 要先安裝 XML package 再載入。
library(XML) # 要先安裝 XML package 再載入。
install.packages("XML")
library("XML", lib.loc="~/R/win-library/3.5")
library(XML) # 要先安裝 XML package 再載入。
data <- xmlToDataFrame("Desktop/A_lvr_land_A.XML")
data <- iris # iris 是 R 內建的資料。
write.table(data, file = "test.CSV", sep = ",")
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/Stock/index.html", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
source('pttTestFunction.R')
id = c(1:10)
URL = paste0("https://www.ptt.cc/bbs/Stock/index.html", id, ".html")
filename = paste0(id, ".txt")
pttTestFunction(URL[1], filename[1])
mapply(pttTestFunction,
URL = URL, filename = filename)
Longley's Economic Regression Data
Longley's Economic Regression Data
longley
library(ggplot2)
longley
ggplot(data = longley, aes(x = Year )) + geom_bar(fill= "lightblue", colour=("black"))
library(ggplot2)
diamonds
ggplot(data = diamonds, aes(x = cut)) + geom_bar(fill= "lightblue", colour=("black"))
longley
ggplot(data = longley, aes(x = GNP.deflator )) + geom_bar(fill= "lightblue", colour=("black"))
longley
ggplot(data = longley, aes(x = Year ,y = GNP.deflator )) + geom_bar(fill= "lightblue", colour=("black"))
mtcars
ggplot(data = , aes(x = hp )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mtcars, aes(x = hp )) + geom_bar(fill= "lightblue", colour=("black"))
mtcars
ggplot(data = mtcars, aes(x = cyl )) + geom_bar(fill= "lightblue", colour=("black"))
sleep
sleep
ggplot(data = sleep, aes(x = extra )) + geom_bar(fill= "lightblue", colour=("black"))
iris
economics
ggplot(data = economics, aes(x = pce )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = economics, aes(x = psavert )) + geom_bar(fill= "lightblue", colour=("black"))
EuStockMarkets
seals
msleep
ggplot(data = msleep, aes(x = vore )) + geom_bar(fill= "lightblue", colour=("black"))
Titanic
WorldPhones
islands
iris3
trees
stackloss
presidential
seals
ggplot(data = seals, aes(x = lat )) + geom_bar(fill= "lightblue", colour=("black"))
midwest
ggplot(data = midwest, aes(x = state )) + geom_bar(fill= "lightblue", colour=("black"))
movies
iris
ggplot(data = iris, aes(x = Species )) + geom_bar(fill= "lightblue", colour=("black"))
mpg
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = diamonds, aes(x = price)) +
geom_histogram()
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("red"))
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
swiss
npk
euro
attitude
ggplot(data = diamonds, aes(x = table, y=depth)) +
geom_point()
AirPassengers
HairEyeColor
Harman74.cor
ggplot(data = mpg, aes(x = dspl)) +
geom_histogram()
ggplot(data = mpg, aes(x = displ)) +
geom_histogram()
ggplot(data = mpg, aes(x = cty, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=2)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=1)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.5)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.2)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.3)
ggplot(data = mpg, aes(x = displ)) +
geom_histogram(binwidth=0.5)
ggplot(data = mpg, aes(x = class, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = class, y=hwy)) +
geom_point()
ggplot(data = mpg, aes(x = class, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
library(ggplot2)
mpg
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
library(ggplot2)
mpg
# 汽車廠牌的統計
ggplot(data = mpg, aes(x = manufacturer )) + geom_bar(fill= "lightblue", colour=("black"))
ggplot(data = mpg, aes(x = cty, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x =cty, y=hwy,color = class)) +
geom_point()
ggplot(data = mpg, aes(x=cty, y=hwy,color = class)) +
geom_point()
ggplot(mpg, aes(x=class, y = displ)) +
geom_boxplot()
setwd("D:/github/project/week4")
dta<-read.table(TIMSS2011TW.txt)
dta<-read.table(file=TIMSS2011TW.txt)
setwd("D:/github/project/week4")
dta<-read.table(file="TIMSS2011TW.txt")
View(dta)
summary(dta)
dta<-read.table(file="TIMSS2011TW.txt",header = TRUE)
summary(dta)
library(ggplot2)
library(ggplot2)
ggplot(data = dta, aes(x = gender, y = math)) +
geom_boxplot() + coord_flip() +
labs( y = 'math', x = 'gender',
title = 'Mathematical Score Box')
??"coord_flip"
??"length"
with(dta,
tapply(math, gender,
function(x)
c(mean(x) + c(-2, 2) * sd(x)/sqrt(length(x)))))
t.test(math ~ gender, data = dta)
t.test(gender~math, data = dta)
t.test(gender ~ math, data = dta)
t.test(math ~ gender, data = dta)
t.test(math ~ gender, data = dta, var.equal = TRUE)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
parental.education <- factor(dta$parental.education,
levels = c('elementary school',
'junior high school',
'high school',
'college',
'university above'))
#看不同父母教育程度下的數學分數平均數
tapply(dta$math, dta$parental.education, mean)
# 不同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = dta,
aes(x = parental.education, y = math)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = '父母教育', y = '數學平均分數') +
coord_flip()
parental.education <- factor(dta$parental.education,
levels = c('elementary school',
'junior high school',
'high school',
'college',
'university above'))
# 不同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = dta,
aes(x = parental.education, y = math)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = '父母教育', y = '數學平均分數') +
coord_flip()
tapply(dta$math, dta$parental.education, mean)
# 不同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = dta,
aes(x = parental.education, y = math)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = '父母教育', y = '數學平均分數') +
coord_flip()
tapply(dta$math, parental.education, mean)
parental.education <- factor(parental.education,
levels = c('elementary school',
'junior high school',
'high school',
'college',
'university above'))
tapply(dta$math, parental.education, mean)
# 不同父母教育程度下的數學分數平均數，加上信賴區間
ggplot(data = dta,
aes(x = parental.education, y = math)) +
stat_summary(fun.data = 'mean_cl_boot', size = 1) +
scale_y_continuous(breaks = seq(500, 660, by = 20)) +
geom_hline(yintercept = mean(dta$math) ,
linetype = 'dotted') +
labs(x = '父母教育', y = '數學平均分數') +
coord_flip()
